---
import ShoppingLayout from '../../layouts/ShoppingLayout.astro';
---

<ShoppingLayout title="Find Lab Locations - Track Your Labs" description="Find convenient lab testing locations near you. Schedule appointments for blood work and diagnostic tests at nearby clinics.">
  <link href='https://api.mapbox.com/mapbox-gl-js/v3.1.0/mapbox-gl.css' rel='stylesheet' />
  <script src='https://api.mapbox.com/mapbox-gl-js/v3.1.0/mapbox-gl.js'></script>
  
  <div class="container mx-auto px-4 py-8 max-w-7xl">
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Find Lab Testing Locations</h1>
      <p class="text-lg text-gray-600">Locate convenient testing centers near you and schedule your appointment</p>
    </div>

    <div class="grid lg:grid-cols-3 gap-6">
      <div class="lg:col-span-2">
        <div class="bg-white rounded-lg shadow-lg p-4">
          <div id="map" class="w-full h-[500px] rounded-lg"></div>
        </div>
      </div>
      
      <div class="lg:col-span-1">
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Your Location</h2>
          <div id="location-info" class="space-y-3">
            <div class="flex items-center text-gray-600">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <span id="user-location">Detecting location...</span>
            </div>
          </div>
          
          <div class="mt-6">
            <h3 class="font-semibold mb-3">Nearby Lab Centers</h3>
            <div id="nearby-labs" class="space-y-3">
              <p class="text-gray-500 text-sm">Loading nearby locations...</p>
            </div>
          </div>
          
          <div class="mt-6">
            <button id="schedule-btn" class="w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed" disabled>
              Select a Location to Schedule
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</ShoppingLayout>

<script>
  // Wait for Mapbox to be available from CDN
  declare const mapboxgl: any;

  window.addEventListener('load', () => {
    // Initialize Mapbox with dev token
    mapboxgl.accessToken = 'pk.eyJ1IjoiZXJpYy1zbm93Zmxha2UiLCJhIjoiY21lZGVhOGhzMDkzaTJrb2V4aHZtNDhjciJ9.1XK2TsB05o6FqoqcR8haxw';

    let map: any;
    
    try {
      map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v12',
        center: [-98.5795, 39.8283], // Center of USA as default
        zoom: 4
      });

      // Add navigation controls
      map.addControl(new mapboxgl.NavigationControl());
    } catch (error) {
      console.error('Error initializing map:', error);
    }

    // Store user marker
    let userMarker: any = null;

    // Get user's location
    if ('geolocation' in navigator) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        const { latitude, longitude } = position.coords;
        
        // Update map center
        map.flyTo({
          center: [longitude, latitude],
          zoom: 13,
          essential: true
        });

        // Add/update user location marker
        if (userMarker) {
          userMarker.setLngLat([longitude, latitude]);
        } else {
          // Create custom marker element
          const el = document.createElement('div');
          el.className = 'user-marker';
          el.style.width = '20px';
          el.style.height = '20px';
          el.style.borderRadius = '50%';
          el.style.backgroundColor = '#3B82F6';
          el.style.border = '3px solid white';
          el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';

          userMarker = new mapboxgl.Marker(el)
            .setLngLat([longitude, latitude])
            .addTo(map);
        }

        // Update location display
        const locationElement = document.getElementById('user-location');
        if (locationElement) {
          locationElement.textContent = `${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;
        }

        // Simulate nearby labs (in production, this would be an API call)
        const nearbyLabsElement = document.getElementById('nearby-labs');
        if (nearbyLabsElement) {
          nearbyLabsElement.innerHTML = `
            <div class="border rounded-lg p-3 hover:bg-gray-50 cursor-pointer">
              <div class="font-medium">Quest Diagnostics</div>
              <div class="text-sm text-gray-600">1.2 miles away</div>
              <div class="text-sm text-gray-500">Mon-Fri: 7AM-5PM</div>
            </div>
            <div class="border rounded-lg p-3 hover:bg-gray-50 cursor-pointer">
              <div class="font-medium">LabCorp</div>
              <div class="text-sm text-gray-600">2.5 miles away</div>
              <div class="text-sm text-gray-500">Mon-Fri: 6AM-4PM</div>
            </div>
            <div class="border rounded-lg p-3 hover:bg-gray-50 cursor-pointer">
              <div class="font-medium">Community Health Center</div>
              <div class="text-sm text-gray-600">3.8 miles away</div>
              <div class="text-sm text-gray-500">Mon-Sat: 8AM-6PM</div>
            </div>
          `;

          // Add click handlers to lab cards
          const labCards = nearbyLabsElement.querySelectorAll('.border');
          labCards.forEach((card) => {
            card.addEventListener('click', () => {
              // Remove previous selections
              labCards.forEach(c => c.classList.remove('border-blue-500', 'bg-blue-50'));
              // Add selection to clicked card
              card.classList.add('border-blue-500', 'bg-blue-50');
              // Enable schedule button
              const scheduleBtn = document.getElementById('schedule-btn') as HTMLButtonElement;
              if (scheduleBtn) {
                scheduleBtn.disabled = false;
              }
            });
          });
        }

        // Add sample lab markers around user location
        const labLocations = [
          { lng: longitude + 0.01, lat: latitude + 0.008, name: 'Quest Diagnostics' },
          { lng: longitude - 0.015, lat: latitude + 0.005, name: 'LabCorp' },
          { lng: longitude + 0.005, lat: latitude - 0.012, name: 'Community Health Center' }
        ];

        labLocations.forEach(lab => {
          new mapboxgl.Marker({ color: '#DC2626' })
            .setLngLat([lab.lng, lab.lat])
            .setPopup(new mapboxgl.Popup().setHTML(`<div class="font-medium">${lab.name}</div>`))
            .addTo(map);
        });
      },
      (error) => {
        console.error('Error getting location:', error);
        const locationElement = document.getElementById('user-location');
        if (locationElement) {
          locationElement.textContent = 'Location access denied';
        }
      }
      );
    } else {
      const locationElement = document.getElementById('user-location');
      if (locationElement) {
        locationElement.textContent = 'Geolocation not supported';
      }
    }

    // Schedule button handler
    document.getElementById('schedule-btn')?.addEventListener('click', () => {
      alert('Scheduling functionality coming soon!');
    });
  });
</script>